class Solution {
    double fractionalKnapsack(int[] values, int[] weights, int W) {
        // code here
        int n = weights.length;
        Item[] items = new Item[n];
        for(int i=0;i<n;i++){
            items[i] = new Item(values[i],weights[i]);
        }
        Arrays.sort(items,(a,b)->
          Double.compare((double)b.value/b.weight,(double)a.value/a.weight)
        );
        int i=0;
        double sum_val = 0.0;
        double currentWeight = 0;
            while(i < n ){
                if(currentWeight + items[i].weight <= W){
                    currentWeight += items[i].weight;
                    sum_val += items[i].value;
                }
                else{
                    int rem = W - (int)currentWeight;
                    double ratio= (double)items[i].value/items[i].weight;
                    sum_val += ratio * rem;
                    break;
                }
                i++;
            }
            return sum_val;
        
    }
}
